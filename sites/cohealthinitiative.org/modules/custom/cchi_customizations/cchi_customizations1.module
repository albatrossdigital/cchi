<?php
/**
 * @file
 * Code for CCHI customizations
 */

function cchi_customizations_preprocess_views_view_unformatted(&$vars) {
  if($vars['view']->name == 'members_resources' && $vars['view']->current_display == 'page') {
    $title = strip_tags($vars['title']);
    $vars['title'] = '<a name="' . $title . '" id="' . $title . '"></a>' . $title;
    
    //$vars['view']<a href="' . str_replace(' ', '%20', $title) . '"></a>';
    $vars['view']->header['area']->options['content'] .= '<p><ul><li><a href="#' . str_replace(' ', '%20', $title) . '">' . $title . '</a></li></ul></p>';
  }
}

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function cchi_customizations_block_info() {
  $blocks['section_title'] = array(
    'info' => t('Menu Section title'),
  );
  $blocks['tweets'] = array(
    'info' => t('Twitter Pull Block'),
  );
  $blocks['tweets_front'] = array(
    'info' => t('Twitter Pull Block for front page'),
  );
  $blocks['blog_header_image'] = array(
    'info' => t('Blog header image block'),
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function cchi_customizations_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'section_title':
      $trail = menu_get_active_trail();
      //we're on a child
      if(isset($trail[1])) {
        $block['content'] = '<h2 class="menu-trail-title">' . $trail[1]['link_title'] . '</h2>';
      }
      else {
        $block['content'] = FALSE;
      }
      break;
    
    //Twitter pull
    case 'tweets':
      $twitter_names = array();
      $twitter_names[] = variable_get('cchi_customizations_' . $delta . '1');
      $twitter_names[] = variable_get('cchi_customizations_' . $delta . '2');
      
      $twitter_title = array();
      $twitter_title[] = 'CCHI';
      $twitter_title[] = 'CCHI Policy';
      
      // The subject is displayed at the top of the block. Note that it
      // should be passed through t() for translation. The title configured
      // for the block using Drupal UI supercedes this one.
      $block['subject'] = t('Twitter');
      // The content of the block is typically generated by calling a custom
      // function.
      $i = 0;
      $output = '<div class="twitter-pull-block-wrapper"><div class="twitter-pull-block-description"><p>The latest tweets from CCHI</p></div>';
      foreach($twitter_names as $twitter_name) {
        $output .= cchi_customizations_twitterpull_content($twitter_name, $twitter_title[$i], 2);
        $output .= '<a href="https://twitter.com/' . $twitter_name . '" class="twitter-follow-button" data-show-count="false">Follow @' . $twitter_name . '</a><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>';
        $i++;
      }
      $block['content'] = $output . '</div>';
      break;
      
    case 'tweets_front':
      $twitter_names = array();
      $twitter_names[] = variable_get('cchi_customizations_tweets1');
      $twitter_names[] = variable_get('cchi_customizations_tweets2');
      
      drupal_add_library('system', 'ui.tabs');
       drupal_add_js(drupal_get_path('module', 'cchi_customizations') . '/js/cchi-customizations.js');
      
      $output = '<div class="twitter-pull-block-wrapper"><div class="twitter-pull-block-description"><p>The latest tweets from CCHI</p></div>';
      
      $html = array();
      $i = 0;
      foreach($twitter_names as $twitter_name) {
        $account_content = cchi_customizations_twitterpull_content($twitter_names[$i], $twitter_names[$i], 1);
        $account_content .= '<a href="https://twitter.com/' . $twitter_name . '" class="twitter-follow-button" data-show-count="false">Follow @' . $twitter_name . '</a><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>';
        $html[] = array('title' => '@' . $twitter_names[$i], 'content' => $account_content);
        $i++;
      }
      $block['content'] = $output . theme('cchi_customizations_twitter_tabs', array('html' => $html)) . '</div>';
      
      break;
      
    case 'blog_header_image':
      $block['content'] = l('Full Coverage', 'blog', array('html' => TRUE, 'attributes' => array('class' => array('blog-header-text',))));
      break;
      
  }
  return $block;
}


function cchi_customizations_twitterpull_content($twitter_name, $twitter_title, $count) {
  if (function_exists('twitter_pull_render') && isset($twitter_name) && $twitter_name) {
    
    $output .= '<div class="twitter-block-header">' 
             . '<div class="twitter-header">'
             . l('Follow', 'http://twitter.com/#!/'.$twitter_name, array('attributes' => array('target'=>'_blank', 'class' => 'twitter-follow-link')))
             . '</div><div class="twitter-link"><div class="twitter-title">' . $twitter_title . '</div>'
             . l('@' . $twitter_name, 'http://twitter.com/#!/'.$twitter_name, array('attributes' => array('target'=>'_blank')))
             . '</div></div>' 
             . twitter_pull_render('@'.$twitter_name, false, $count);
  }
  else {
    $output .= "<p>Twitter not currently available, sorry!</p>";
  }
  
  return $output;
}

/**
 * Implements phptemplate_preprocess_page().
 */
function cchi_customizations_preprocess_page(&$vars) {
  if((arg(0) == 'members-resources') && empty($vars['user']->uid)) {
    //dpm(arg(0));
    //drupal_goto('user');//, array('query'=>array('destination'=>'members-resources')));
    //drupal_goto('user/login', array('query'=>drupal_get_destination()));
  }
}

/**
 * Implements phptemplate_preprocess_block().
 */
function cchi_customizations_preprocess_block(&$vars) {

  //User menu.  Hide elements if logged in / not logged in
  if($vars['elements']['#block']->bid == "system-user-menu"  && $vars['elements']['content']) {
    $output = '';
    foreach($vars['elements']['content'] as $key => $value) {
      if(is_numeric($key)){
        if($vars['user']->uid && ($value['#title'] == "Members' Section" || $value['#title'] == 'Log out')) {
          $output .=  $value['#children'];
        }
        else if(!$vars['user']->uid) {
          $output .=  $value['#children'];
        }
      }
    }
    if($output) {
      $vars['content'] = '<ul class="menu">' . $output . '</ul>' . $vars['elements']['context']['#markup'];
    }
  }
}

/**
 * Implements hook_theme()
 */
function cchi_customizations_theme() {
  return array(
    'cchi_customizations_twitter_tabs' => array(
      'html' => array(),
    ),
  );
}

/**
 * Theme callback to display tab html.
 */
function theme_cchi_customizations_twitter_tabs($variables) {
  $links = '';
  $content = '';
  $i = 0;
  $li_class;
  foreach ($variables['html'] as $key => $tab){
    if($i==0) {
      $li_class = 'first';
    }
    else if(($i + 1) == count($variables['html'])) {
      $li_class = 'last';
    }
    else {
      $li_class = 'leaf';
    }
    $key = 'item-tab-' . $key;
    $links .= '<li class="' . $li_class . '"><a href="#' .$key. '">' . t($tab['title']) .'</a></li>';
    $content .= '<div id="' . $key . '">' . $tab['content'] . '</div>';
    $i++;
  }
  $links = '<ul>' . $links . '</ul>';
  return '<div id="item-tabs">' . $links . $content . '</div>';
}

function cchi_customizations_form_alter(&$form, &$form_state, $form_id) {
  if($form['#id'] == 'block-admin-configure' && $form['module']['#value'] == 'cchi_customizations') {
		$key = $form['module']['#value'] . '_' . $form['delta']['#value'];
		
		$default_value = variable_get($key . '1');
		
		$form['settings']['cchi_customizations_1'] = array(
		    '#type' => 'textfield',
		    '#title' => t('Twitter Name 1'),
		    '#description' => t('Enter the 1st twitter username you would like to pull from.'),
		    '#default_value' => $default_value,
		    '#weight' => -5,
		);
		
		$default_value = variable_get($key . '2');
		
		$form['settings']['cchi_customizations_2'] = array(
		    '#type' => 'textfield',
		    '#title' => t('Twitter Name 2'),
		    '#description' => t('Enter the 2nd twitter username you would like to pull from.'),
		    '#default_value' => $default_value,
		    '#weight' => -4,
		);
		
		$form['#submit'][] = 'cchi_customizations_form_submit';
  }
}

function cchi_customizations_form_submit($form, &$form_state) {
  $key = $form['module']['#value'] . '_' . $form['delta']['#value'];
  $twitter1 = variable_get($key . '1');
  $twitter2 = variable_get($key . '2');
  if($form_state['input']['cchi_customizations_1']) {
    variable_set($key . '1', $form_state['input']['cchi_customizations_1']);
  }
  else {
    if($twitter1) {
      variable_del($key . '1');
    }
  }
  if($form_state['input']['cchi_customizations_2']) {
    variable_set($key . '2', $form_state['input']['cchi_customizations_2']);
  }
  else {
    if($twitter2) {
      variable_del($key . '2');
    }
  }
}

